Motivation

Nowadays, Python is one of the most used programming languages which are use world wide[2]. This includes the new programmers learning the language and the ones transitioning to Python. But with some of those that are transitioning to Python they would have the chance of using methods that are normal in their old programming but unortandox in Python programming. When programmers use Python language and not Pythonic Idioms, it would cause the program to have problematic flaws and sometimes unefficient to use. Such as the usage of  f = open('file.txt') and  f.close(), These commands within the program would cause problems when programmers forget the to add in f.close(), thus the Pythonic Idiom would be with open() as f: instead.
Also with in the software development cycle, using pythonic idioms within the development phase would give the code reviewers a better understanding of the program and a more smooth work flow. This is because most reviwers would be used to the usage of pythonic idioms. That would be the reason that if a helper for Pythonic idiom was created there would be a higher quality of codes being used.
With the reasonings above, we have had the idea of creating "Teddy" as a software that would help in the detection and prevention of pythonic idiom in source codes. The users of the software would be able to check their code quality in terms of pythonic idioms and it would also help the new programmers to learn and understand what their flaws are when using python as a programming language.
We as the developers of "Teddy" believe that "Teddy" can enhance the standards for python language and give the developers in Thailand more understanding of Python, which is a world wide programming language.